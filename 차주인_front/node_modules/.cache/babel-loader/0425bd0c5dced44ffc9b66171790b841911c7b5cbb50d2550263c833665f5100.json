{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:4000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"scd\": \"CARMASTERSCD\"\n  }\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  let config = error.config;\n  let data = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n  if (data) {\n    if (data.code === 1000) {\n      // Ïù¥Ïö©Ï†úÌïú Í≥ÑÏ†ï\n      console.log(\"üöÄ ~ error:\", error);\n      localStorage.setItem(\"token\", \"\");\n      if (config.url.indexOf(\"/login/login\") < 0) {\n        window.location.href = \"/login\";\n        return;\n      }\n    } else if (data.code === 1100) {\n      // Î°úÍ∑∏Ïù∏ ÌïÑÏöî\n      localStorage.setItem(\"token\", \"\");\n      window.location.href = \"/login\";\n    }\n  }\n  return Promise.reject(error);\n});\nexport const postData = (url, sender = {}) => {\n  axiosInstance.defaults.headers.common[\"authorization\"] = localStorage.getItem(\"token\");\n  return axiosInstance.post(url, sender);\n};","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","response","use","error","_error$response","config","data","code","console","log","localStorage","setItem","url","indexOf","window","location","href","Promise","reject","postData","sender","defaults","common","getItem","post"],"sources":["C:/Users/USER/Desktop/ÏÇ¨ÏóÖÍ¥ÄÎ†®ÏÑúÎ•ò/pnÍ∞úÎ∞úÏù¥Î†•/Ï∞®Ï£ºÏù∏_20250609/Ï∞®Ï£ºÏù∏_front/src/utils/service.js"],"sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n    baseURL: \"http://localhost:4000\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"scd\": \"CARMASTERSCD\"\n    }\n});\n\naxiosInstance.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        let config = error.config;\n        let data = error.response?.data;\n        if (data) {\n            if (data.code === 1000) {\n                // Ïù¥Ïö©Ï†úÌïú Í≥ÑÏ†ï\n                console.log(\"üöÄ ~ error:\", error);\n                localStorage.setItem(\"token\", \"\");\n                if (config.url.indexOf(\"/login/login\") < 0) {\n                    window.location.href = \"/login\";\n                    return;\n                }\n            } else if (data.code === 1100) {\n                // Î°úÍ∑∏Ïù∏ ÌïÑÏöî\n                localStorage.setItem(\"token\", \"\");\n                window.location.href = \"/login\";\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport const postData = (url, sender = {}) => {\n    axiosInstance.defaults.headers.common[\"authorization\"] = localStorage.getItem(\"token\");\n    return axiosInstance.post(url, sender);\n};\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC/BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEFH,aAAa,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAClCD,QAAQ,IAAK;EACV,OAAOA,QAAQ;AACnB,CAAC,EACAE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACP,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAM;EACzB,IAAIC,IAAI,IAAAF,eAAA,GAAGD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,IAAI;EAC/B,IAAIA,IAAI,EAAE;IACN,IAAIA,IAAI,CAACC,IAAI,KAAK,IAAI,EAAE;MACpB;MACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEN,KAAK,CAAC;MACjCO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MACjC,IAAIN,MAAM,CAACO,GAAG,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B;MACJ;IACJ,CAAC,MAAM,IAAIV,IAAI,CAACC,IAAI,KAAK,IAAI,EAAE;MAC3B;MACAG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MACjCG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACnC;EACJ;EACA,OAAOC,OAAO,CAACC,MAAM,CAACf,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,OAAO,MAAMgB,QAAQ,GAAGA,CAACP,GAAG,EAAEQ,MAAM,GAAG,CAAC,CAAC,KAAK;EAC1CxB,aAAa,CAACyB,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAAC,eAAe,CAAC,GAAGZ,YAAY,CAACa,OAAO,CAAC,OAAO,CAAC;EACtF,OAAO3B,aAAa,CAAC4B,IAAI,CAACZ,GAAG,EAAEQ,MAAM,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}