{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\\\uC0AC\\uC5C5\\uAD00\\uB828\\uC11C\\uB958\\\\pn\\uAC1C\\uBC1C\\uC774\\uB825\\\\\\uCC28\\uC8FC\\uC778_20250609\\\\\\uCC28\\uC8FC\\uC778_front\\\\src\\\\component\\\\Button.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useFetcher, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n/*\n    <Button buttonTxt=\"소\" buttonSize=\"small\" />\n    <Button buttonTxt=\"기본\" />\n    <Button buttonTxt=\"중\" buttonSize=\"medium\" />\n    <Button buttonTxt=\"대\" buttonSize=\"large\" />\n\n    <Button buttonTxt=\"기본\" />\n    <Button buttonTxt=\"흰색\" buttonShape=\"white\" />\n    <Button buttonTxt=\"그레이\" buttonShape=\"gray\" />\n    <Button buttonTxt=\"레드\" buttonShape=\"red\" />\n    <Button buttonTxt=\"아이콘\" titleimgs=\"/images/icons/plus.svg\" buttonShape=\"\" />\n\n    <Button buttonTxt=\"아이콘\" titleimgs=\"/images/icons/alarm-warning-line.svg\" buttonShape=\"red\" />\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Button(props) {\n  _s();\n  const {\n    className,\n    onPress = () => {},\n    type,\n    styles,\n    disabled,\n    buttonTxt,\n    buttonShape = \"nomal\",\n    // nomal white gray red black blue\n    buttonSize = \"nomal\",\n    // small nomal medium large\n    titleimgs = \"\",\n    id_data = \"\",\n    filenames = \"\"\n  } = props;\n  const shapeToClass = shape => {\n    let resultClassName = \"\";\n    if (shape === \"white\") {\n      resultClassName = \"white-btn\";\n    } else if (shape === \"gray\") {\n      resultClassName = \"gray-btn\";\n    } else if (shape === \"red\") {\n      resultClassName = \"red-btn\";\n    } else if (shape === \"black\") {\n      resultClassName = \"black-btn\";\n    } else if (shape === \"blue\") {\n      resultClassName = \"blue-btn\";\n    }\n    return resultClassName;\n  };\n  const sizeToClass = size => {\n    let resultClassName = \"\";\n    if (size === \"small\") {\n      resultClassName = \"small\";\n    } else if (size === \"medium\") {\n      resultClassName = \"medium\";\n    } else if (size === \"large\") {\n      resultClassName = \"large\";\n    }\n    return resultClassName;\n  };\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: id_data,\n      filenamedata: filenames,\n      style: styles,\n      className: `default-button ${shapeToClass(buttonShape)} ${sizeToClass(buttonSize)} ${className ? className : 'normalbutton'} ${disabled === true && 'buttondisabled'}`,\n      onClick: onPress,\n      type: type,\n      disabled: disabled,\n      children: [titleimgs !== '' && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: titleimgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this), buttonTxt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Button, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useEffect","useState","Link","useFetcher","useNavigate","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","props","_s","className","onPress","type","styles","disabled","buttonTxt","buttonShape","buttonSize","titleimgs","id_data","filenames","shapeToClass","shape","resultClassName","sizeToClass","size","dispatch","navigate","children","id","filenamedata","style","onClick","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/사업관련서류/pn개발이력/차주인_20250609/차주인_front/src/component/Button.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useFetcher, useNavigate } from \"react-router-dom\";\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\n/*\n    <Button buttonTxt=\"소\" buttonSize=\"small\" />\n    <Button buttonTxt=\"기본\" />\n    <Button buttonTxt=\"중\" buttonSize=\"medium\" />\n    <Button buttonTxt=\"대\" buttonSize=\"large\" />\n\n    <Button buttonTxt=\"기본\" />\n    <Button buttonTxt=\"흰색\" buttonShape=\"white\" />\n    <Button buttonTxt=\"그레이\" buttonShape=\"gray\" />\n    <Button buttonTxt=\"레드\" buttonShape=\"red\" />\n    <Button buttonTxt=\"아이콘\" titleimgs=\"/images/icons/plus.svg\" buttonShape=\"\" />\n\n    <Button buttonTxt=\"아이콘\" titleimgs=\"/images/icons/alarm-warning-line.svg\" buttonShape=\"red\" />\n */\nexport default function Button(props) {\n\n    const {\n        className,\n        onPress = () => { },\n        type,\n        styles,\n        disabled,\n        buttonTxt,\n        buttonShape = \"nomal\", // nomal white gray red black blue\n        buttonSize = \"nomal\", // small nomal medium large\n        titleimgs = \"\",\n        id_data = \"\",\n        filenames = \"\"\n    } = props;\n\n    const shapeToClass = (shape) => {\n        let resultClassName = \"\"\n\n        if (shape === \"white\") { resultClassName = \"white-btn\" }\n        else if (shape === \"gray\") { resultClassName = \"gray-btn\" }\n        else if (shape === \"red\") { resultClassName = \"red-btn\" }\n        else if (shape === \"black\") { resultClassName = \"black-btn\" }\n        else if (shape === \"blue\") { resultClassName = \"blue-btn\" }\n        return resultClassName\n    }\n\n    const sizeToClass = (size) => {\n        let resultClassName = \"\"\n\n        if (size === \"small\") { resultClassName = \"small\" }\n        else if (size === \"medium\") { resultClassName = \"medium\" }\n        else if (size === \"large\") { resultClassName = \"large\" }\n        return resultClassName\n    }\n\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n\n    return (\n        <>\n            <button\n                id={id_data}\n                filenamedata={filenames}\n                style={styles}\n                className={`default-button ${shapeToClass(buttonShape)} ${sizeToClass(buttonSize)} ${className ? className : 'normalbutton'} ${disabled === true && 'buttondisabled'}`}\n                onClick={onPress}\n                type={type}\n                disabled={disabled}\n            >\n                {titleimgs !== '' && <img src={titleimgs} />}\n                {buttonTxt}\n            </button>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAGhE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAcA,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElC,MAAM;IACFC,SAAS;IACTC,OAAO,GAAGA,CAAA,KAAM,CAAE,CAAC;IACnBC,IAAI;IACJC,MAAM;IACNC,QAAQ;IACRC,SAAS;IACTC,WAAW,GAAG,OAAO;IAAE;IACvBC,UAAU,GAAG,OAAO;IAAE;IACtBC,SAAS,GAAG,EAAE;IACdC,OAAO,GAAG,EAAE;IACZC,SAAS,GAAG;EAChB,CAAC,GAAGZ,KAAK;EAET,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAIC,eAAe,GAAG,EAAE;IAExB,IAAID,KAAK,KAAK,OAAO,EAAE;MAAEC,eAAe,GAAG,WAAW;IAAC,CAAC,MACnD,IAAID,KAAK,KAAK,MAAM,EAAE;MAAEC,eAAe,GAAG,UAAU;IAAC,CAAC,MACtD,IAAID,KAAK,KAAK,KAAK,EAAE;MAAEC,eAAe,GAAG,SAAS;IAAC,CAAC,MACpD,IAAID,KAAK,KAAK,OAAO,EAAE;MAAEC,eAAe,GAAG,WAAW;IAAC,CAAC,MACxD,IAAID,KAAK,KAAK,MAAM,EAAE;MAAEC,eAAe,GAAG,UAAU;IAAC;IAC1D,OAAOA,eAAe;EAC1B,CAAC;EAED,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC1B,IAAIF,eAAe,GAAG,EAAE;IAExB,IAAIE,IAAI,KAAK,OAAO,EAAE;MAAEF,eAAe,GAAG,OAAO;IAAC,CAAC,MAC9C,IAAIE,IAAI,KAAK,QAAQ,EAAE;MAAEF,eAAe,GAAG,QAAQ;IAAC,CAAC,MACrD,IAAIE,IAAI,KAAK,OAAO,EAAE;MAAEF,eAAe,GAAG,OAAO;IAAC;IACvD,OAAOA,eAAe;EAC1B,CAAC;EAGD,MAAMG,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAC9B,MAAM0B,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAG9B,oBACII,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACIxB,OAAA;MACIyB,EAAE,EAAEV,OAAQ;MACZW,YAAY,EAAEV,SAAU;MACxBW,KAAK,EAAElB,MAAO;MACdH,SAAS,EAAE,kBAAkBW,YAAY,CAACL,WAAW,CAAC,IAAIQ,WAAW,CAACP,UAAU,CAAC,IAAIP,SAAS,GAAGA,SAAS,GAAG,cAAc,IAAII,QAAQ,KAAK,IAAI,IAAI,gBAAgB,EAAG;MACvKkB,OAAO,EAAErB,OAAQ;MACjBC,IAAI,EAAEA,IAAK;MACXE,QAAQ,EAAEA,QAAS;MAAAc,QAAA,GAElBV,SAAS,KAAK,EAAE,iBAAId,OAAA;QAAK6B,GAAG,EAAEf;MAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3CtB,SAAS;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACX,CAAC;AAEX;AAAC5B,EAAA,CAzDuBF,MAAM;EAAA,QAqCTN,WAAW,EACXD,WAAW;AAAA;AAAAsC,EAAA,GAtCR/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}