{"ast":null,"code":"import axios from \"axios\";\nimport { randomDigitCharactersSpecialCharacterslength } from \"./utils\";\nconst getUniqState = function () {\n  var stat_str = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n  return stat_str;\n};\nconst client_id = \"HsKnYluLIe4RZof9X2hL\";\nconst client_secret = \"vrSKcEhhDw\";\nconst redirect_uri = \"http://127.0.0.1:3000/login\";\nconst state = randomDigitCharactersSpecialCharacterslength(20);\nexport const parseCallBack = function () {\n  var params = {};\n  var queryString = (document.location + \"\").substring(1);\n  var regex = /([^#?&=]+)=([^&]*)/g;\n  var match;\n  while ((match = regex.exec(queryString)) !== null) {\n    params[decodeURIComponent(match[1])] = decodeURIComponent(match[2]);\n  }\n  return params;\n};\nexport const openNaver = () => {\n  let url = `https://nid.naver.com/oauth2.0/authorize?response_type=token&client_id=${client_id}&redirect_uri=${redirect_uri}&state=${getUniqState()}`;\n  window.location.href = url;\n};\nexport const getNaverInfo = (accessToken, state) => {\n  // let reqUrl = `https://nid.naver.com/oauth2.0/oauth2.0/token?grant_type=authorization_code&client_id=${client_id}&client_secret=${client_secret}&code=${code}&state=${state}`;\n\n  // return new Promise((resolve, reject) => {\n  //     axios.post(reqUrl).then(result => {\n  //         let access_token = result.data.access_token;\n  //         getUserInfo(access_token).then(infoResult => resolve(result)).catch(e => reject(e))\n  //     }).catch(e => reject(e))\n  // })\n\n  return new Promise((resolve, reject) => {\n    let data = '';\n    let config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: 'https://openapi.naver.com/v1/nid/getUserProfile.json?response_type=json&access_token=' + accessToken,\n      headers: {\n        origin: \"*\",\n        withCredentials: true\n      },\n      data: data\n    };\n    axios.request(config).then(response => {\n      console.log(JSON.stringify(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n};\nexport const getUserInfo = accessToken => {\n  let reqUrl = `https://openapi.naver.com/v1/nid/getUserProfile.json?response_type=json`;\n  return new Promise((resolve, reject) => {\n    axios.get(reqUrl, {\n      data: {\n        \"access_token\": accessToken\n      }\n    }).then(result => resolve(result)).catch(e => reject(e));\n  });\n};","map":{"version":3,"names":["axios","randomDigitCharactersSpecialCharacterslength","getUniqState","stat_str","replace","c","r","Math","random","v","toString","client_id","client_secret","redirect_uri","state","parseCallBack","params","queryString","document","location","substring","regex","match","exec","decodeURIComponent","openNaver","url","window","href","getNaverInfo","accessToken","Promise","resolve","reject","data","config","method","maxBodyLength","Infinity","headers","origin","withCredentials","request","then","response","console","log","JSON","stringify","catch","error","getUserInfo","reqUrl","get","result","e"],"sources":["C:/Users/USER/Desktop/사업관련서류/pn개발이력/차주인_20250609/차주인_front/src/utils/naverLogin.js"],"sourcesContent":["import axios from \"axios\";\nimport { randomDigitCharactersSpecialCharacterslength } from \"./utils\";\n\nconst getUniqState = function () {\n    var stat_str = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) { var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8); return v.toString(16); });\n    return stat_str;\n};\n\nconst client_id = \"HsKnYluLIe4RZof9X2hL\";\nconst client_secret = \"vrSKcEhhDw\";\nconst redirect_uri = \"http://127.0.0.1:3000/login\";\nconst state = randomDigitCharactersSpecialCharacterslength(20);\n\nexport const parseCallBack = function () {\n    var params = {};\n    var queryString = (document.location + \"\").substring(1);\n    var regex = /([^#?&=]+)=([^&]*)/g;\n    var match;\n    while ((match = regex.exec(queryString)) !== null) {\n        params[decodeURIComponent(match[1])] = decodeURIComponent(match[2]);\n    }\n    return params;\n}\n\nexport const openNaver = () => {\n    let url = `https://nid.naver.com/oauth2.0/authorize?response_type=token&client_id=${client_id}&redirect_uri=${redirect_uri}&state=${getUniqState()}`\n    window.location.href = url;\n}\n\nexport const getNaverInfo = (accessToken, state) => {\n    // let reqUrl = `https://nid.naver.com/oauth2.0/oauth2.0/token?grant_type=authorization_code&client_id=${client_id}&client_secret=${client_secret}&code=${code}&state=${state}`;\n\n    // return new Promise((resolve, reject) => {\n    //     axios.post(reqUrl).then(result => {\n    //         let access_token = result.data.access_token;\n    //         getUserInfo(access_token).then(infoResult => resolve(result)).catch(e => reject(e))\n    //     }).catch(e => reject(e))\n    // })\n\n    return new Promise((resolve, reject) => {\n\n        let data = '';\n\n        let config = {\n            method: 'get',\n            maxBodyLength: Infinity,\n            url: 'https://openapi.naver.com/v1/nid/getUserProfile.json?response_type=json&access_token=' + accessToken,\n            headers: {\n                origin: \"*\",\n                withCredentials: true,\n            },\n            data: data,\n        };\n\n        axios.request(config)\n            .then((response) => {\n                console.log(JSON.stringify(response.data));\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    })\n}\n\nexport const getUserInfo = (accessToken) => {\n    let reqUrl = `https://openapi.naver.com/v1/nid/getUserProfile.json?response_type=json`;\n\n    return new Promise((resolve, reject) => {\n        axios.get(reqUrl, {\n            data: {\n                \"access_token\": accessToken\n            }\n        }).then(result => resolve(result)).catch(e => reject(e))\n    })\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}